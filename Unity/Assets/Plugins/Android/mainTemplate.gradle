buildscript {
	repositories {
		google()
		jcenter()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:3.1.4'
	}
}

allprojects {
   repositories {
      flatDir {
        dirs 'libs'
      }
   }
}

apply plugin: 'com.android.application'

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation(name: '5FunVideo', ext:'aar')
	implementation(name: 'wufunvideoadlib', ext:'aar')
}

android {
	compileSdkVersion 27
	buildToolsVersion '28.0.2'

	defaultConfig {
		targetSdkVersion 27
		applicationId 'cn.jonny.adv'
	}

	lintOptions {
		abortOnError false
	}

	aaptOptions {
		noCompress '.unity3d', '.ress', '.resource', '.obb'
	}

	signingConfigs { release {
		storeFile file('D:/workspace/Project/Platform/Unity-5FunVideo/Unity/android.keystore')
		storePassword '123456'
		keyAlias 'csg'
		keyPassword '123456'
	} }

	buildTypes {
  		debug {
 			minifyEnabled false
 			useProguard false
 			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
  			jniDebuggable true
  		}
  		release {
 			minifyEnabled false
 			useProguard false
  			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
  			signingConfig signingConfigs.release
  		}
	}

	splits {

		// Configures multiple APKs based on ABI.
		abi {

			// Enables building multiple APKs per ABI.
			enable true

			// By default all ABIs are included, so use reset() and include to specify that we only
			// want APKs for x86, armeabi-v7a, and mips.

			// Resets the list of ABIs that Gradle should create APKs for to none.
			reset()

			// Specifies a list of ABIs that Gradle should create APKs for.
			include "armeabi-v7a"
		}
	}
}
